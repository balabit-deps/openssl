#!/usr/bin/make -f
STAMPDIR=tgz2build/stamps

CONFIGURE_OPTS = --prefix=$(ZBS_PREFIX) no-idea no-mdc2 no-rc5 zlib --openssldir=$(ZBS_PREFIX)/usr --with-zlib-include=$(ZBS_PREFIX)/include --with-zlib-lib=$(ZBS_PREFIX)/lib
CONFIGURE = ./config shared $(CONFIGURE_OPTS)

SOURCE_PACKAGE="openssl@@_WITH_FIPS@@"

MAKEDEPPROG=
ifneq (,$(findstring linux-,$(ZBS_DIST)))
ifneq (,$(findstring fips,$(SOURCE_PACKAGE)))
	FIPS_OPT = fips
	FIPS_DIR_OPT = --with-fipsdir=$(ZBS_PREFIX)/openssl-fips-2.0
endif
ifneq (,$(findstring amd64,$(ZBS_ARCH)))
	CONFIGURE = ./Configure linux-x86_64 $(FIPS_OPT) shared $(CONFIGURE_OPTS) $(FIPS_DIR_OPT) -Wa,--noexecstack
else
	CONFIGURE = ./Configure linux-generic32 $(FIPS_OPT) shared $(CONFIGURE_OPTS) $(FIPS_DIR_OPT) -Wa,--noexecstack
endif
endif

ifneq (,$(findstring hpux,$(ZBS_DIST)))
		CONFIGURE = ./Configure hpux-gcc shared $(CONFIGURE_OPTS)
endif

ifneq (,$(findstring aix,$(ZBS_DIST)))
		CONFIGURE = ./Configure aix-gcc shared $(CONFIGURE_OPTS)
endif

ifneq (,$(findstring solaris-,$(ZBS_DIST)))
ifneq (,$(findstring sparc64,$(ZBS_ARCH)))
		CONFIGURE = ./Configure solaris64-sparcv9-gcc shared $(CONFIGURE_OPTS)
endif
endif

RPATH=-Wl,-R/opt/syslog-ng/lib
ifneq (,$(findstring aix,$(ZBS_DIST)))
  RPATH=-Wl,-blibpath:/opt/syslog-ng/lib:/usr/lib:/lib,-bnoquiet,-bnoentry
endif

ifneq (,$(findstring hpux,$(ZBS_DIST)))
  RPATH=-Wl,+b/opt/syslog-ng/lib
  MAKEDEPPROG=MAKEDEPPROG=gcc
endif

ifneq (,$(findstring tru64,$(ZBS_DIST)))
  RPATH=-Wl,-rpath,/opt/syslog-ng/lib
  CC=cc
endif

all: binary

binary: $(STAMPDIR)/stamp-setup $(STAMPDIR)/stamp-configure $(STAMPDIR)/stamp-build $(STAMPDIR)/stamp-install

setup: $(STAMPDIR)/stamp-setup
$(STAMPDIR)/stamp-setup:
	mkdir tgz2build/stamps || true
	touch $@

configure: $(STAMPDIR)/stamp-configure
$(STAMPDIR)/stamp-configure: $(STAMPDIR)/stamp-setup
	$(CONFIGURE)
	touch $@

build: $(STAMPDIR)/stamp-build
$(STAMPDIR)/stamp-build: $(STAMPDIR)/stamp-configure
	$(MAKE) depend $(MAKEDEPPROG)
	# need to do this way, because we don't have any other way to pass rpath settings, without munging the Configure script.
	SHARED_LDFLAGS=`sed -n -e 's/^SHARED_LDFLAGS[^=]*=//p' Makefile`; \
	$(MAKE) SHARED_LDFLAGS="$$SHARED_LDFLAGS $(RPATH)"
	#$(MAKE) test #disable as it needs Test::more upgrade that should be done under microscope
	touch $@


install:  $(STAMPDIR)/stamp-install
$(STAMPDIR)/stamp-install: $(STAMPDIR)/stamp-build
	rm -rf $(ZBS_STAGE_DIR)
	$(MAKE) install DESTDIR=$(ZBS_STAGE_DIR)
	if echo $(ZBS_DIST) | grep '^aix' >/dev/null 2>&1;then \
		ln -s libcrypto.so.1.1 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/lib/libcrypto.so; \
		ln -s libssl.so.1.1 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/lib/libssl.so; \
	fi
	touch $@

clean:
	rm -rf tgz2build/stamps || true
	rm -rf tgz2build/staging || true
	-$(MAKE) clean


